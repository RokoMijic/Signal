df_2ansq[1:10, 1:20]
df_2ansq = data.matrix(df_2ansq)
df_2ansq[1:10, 1:20]
df_2ansq = as.numeric(data.matrix(df_2ansq))
df_2ansq[1:10, 1:20]
dim(df_2ansq)
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
dim(df_2ansq)
df_2ansq = as.numeric(data.matrix(df_2ansq))
dim(df_2ansq)
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
dim(df_2ansq)
df_2ansq[1:10, 1:20]
class(df_2ansq) <- "numeric"
dim(df_2ansq)
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_2ansq[1:10, 1:30]
dim(df_2ansq)
df_2ansq = data.matrix(df_2ansq)
dim(df_2ansq)
df_2ansq[1:10, 1:30]
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_2ansq[1:10, 1:20]
class(df_2ansq) <- "numeric"
df_2ansq = data.matrix(df_2ansq)
class(df_2ansq) <- "numeric"
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_2ansq[1:10, 1:20]
df_2ansq = data.matrix(df_2ansq)
class(df_2ansq) <- "numeric"
df_2ansq[1:10, 1:20]
df_2ansq = df_2ansq -1
df_2ansq[1:10, 1:20]
numericalize = function(df)
{
df_mat = data.matrix(df)
class(df) = "numeric"
df_mat = df_mat - 1
ans = data.frame(df_mat)
return(ans)
}
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
numericalize(df_2ansq)
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
dfin = df_2ansq
df_mat = data.matrix(dfin)
class(dfin) = "numeric"
dfin = df_2ansq
df_mat = data.matrix(dfin)
class(df_mat) = "numeric"
df_mat = df_mat - 1
ans = data.frame(df_mat)
ans[1:10, 1:20]
numericalize = function(dfin)
{
df_mat = data.matrix(dfin)
class(df_mat) = "numeric"
df_mat = df_mat - 1
ans = data.frame(df_mat)
return(ans)
}
numericalize = function(dfin)
{
df_mat = data.matrix(dfin)
class(df_mat) = "numeric"
df_mat = df_mat - 1
ans = data.frame(df_mat)
return(ans)
}
df_2ansq = numericalize(df_2ansq)
df_qs = dplyr::select( df, starts_with("q"))
df_ds = dplyr::select( df, starts_with("d"))
df_ps = dplyr::select( df, starts_with("p"))
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_3ansq = df_qs[, names(df_qs) %in% q_ans_3]
df_4ansq = df_qs[, names(df_qs) %in% q_ans_4]
df_misc = dplyr::select( df, -starts_with("q"), -starts_with("p"), -starts_with("d") )
users = dplyr::select( df, d_username )
df_2ansq = numericalize(df_2ansq)
df_2ansq[1:10, 1:10]
library(zoo)
library(dplyr)
library(readr)
df_2ansq = na.aggregate(df_2ansq)
df_2ansq[1:10,1:10]
typeof(df_2ansq)
cor(df_2ansq)
cormat_2q = cor(df_2ansq)
source('./Week2/resampling_utils.R')
library(zoo)
library(dplyr)
library(readr)
df = readRDS('./Week3/parsed_data.rds')
qdata = read_delim('./Week3/question_data.csv', ';')
df = reduce_data(df, frac = 0.03)
dim(df)
Total_vals = dim(df)[1]*dim(df)[2]
Total_vals
frac_na = sum(is.na(df))/Total_vals
frac_na
colnames(qdata)[[1]] = "q_num"
head(qdata)
q_ans_2 = dplyr::filter(qdata, is.na(option_3), is.na(option_4))$q_num
q_ans_3 = dplyr::filter(qdata, !is.na(option_3), is.na(option_4))$q_num
q_ans_4 = dplyr::filter(qdata, !is.na(option_3), !is.na(option_4))$q_num
head(q_ans_2)
nrow(q_ans_2)
nrow(q_ans_3)
nrow(q_ans_4)
numericalize = function(dfin)
{
df_mat = data.matrix(dfin)
class(df_mat) = "numeric"
df_mat = df_mat - 1
ans = data.frame(df_mat)
return(ans)
}
df_qs = dplyr::select( df, starts_with("q"))
df_ds = dplyr::select( df, starts_with("d"))
df_ps = dplyr::select( df, starts_with("p"))
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_3ansq = df_qs[, names(df_qs) %in% q_ans_3]
df_4ansq = df_qs[, names(df_qs) %in% q_ans_4]
df_misc = dplyr::select( df, -starts_with("q"), -starts_with("p"), -starts_with("d") )
users = dplyr::select( df, d_username )
df_2ansq = numericalize(df_2ansq)
df_2ansq = na.aggregate(df_2ansq)
df_2ansq[1:10,1:10]
cormat_2q = cor(df_2ansq)
corplot(cormat_2q)
corrplot(cormat_2q)
library(corrplot)
install.packages(corrplot)
install.packages('corrplot')
library(corrplot)
corrplot(cormat_2q)
dim(cormat_2q)
dim(cormat_2q)
library(corrplot)
dim(cormat_2q)
cormat_2q = cor(df_2ansq)
dim(cormat_2q)
source('./Week2/resampling_utils.R')
library(zoo)
library(dplyr)
library(readr)
library(corrplot)
df = readRDS('./Week3/parsed_data.rds')
qdata = read_delim('./Week3/question_data.csv', ';')
df = reduce_data(df, frac = 0.03)
dim(df)
Total_vals = dim(df)[1]*dim(df)[2]
Total_vals
frac_na = sum(is.na(df))/Total_vals
frac_na
colnames(qdata)[[1]] = "q_num"
head(qdata)
q_ans_2 = dplyr::filter(qdata, is.na(option_3), is.na(option_4))$q_num
q_ans_3 = dplyr::filter(qdata, !is.na(option_3), is.na(option_4))$q_num
q_ans_4 = dplyr::filter(qdata, !is.na(option_3), !is.na(option_4))$q_num
numericalize = function(dfin)
{
df_mat = data.matrix(dfin)
class(df_mat) = "numeric"
df_mat = df_mat - 1
ans = data.frame(df_mat)
return(ans)
}
df_qs = dplyr::select( df, starts_with("q"))
df_ds = dplyr::select( df, starts_with("d"))
df_ps = dplyr::select( df, starts_with("p"))
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_3ansq = df_qs[, names(df_qs) %in% q_ans_3]
df_4ansq = df_qs[, names(df_qs) %in% q_ans_4]
df_misc = dplyr::select( df, -starts_with("q"), -starts_with("p"), -starts_with("d") )
users = dplyr::select( df, d_username )
df_2ansq = numericalize(df_2ansq)
df_2ansq = na.aggregate(df_2ansq)
df_2ansq[1:10,1:10]
cormat_2q = cor(df_2ansq)
dim(cormat_2q)
prcomp_obj = prcomp(df_2ansq)
library(ggplot2)
dim(prcomp_obj$sdev)
head(prcomp_obj$sdev)
typeof(prcomp_obj$sdev)
dim(prcomp_obj$sdev)
length(prcomp_obj$sdev)
head(names(prcomp_obj$sdev))
head(colnames(prcomp_obj$sdev))
head(rownames(prcomp_obj$sdev))
head(names(prcomp_obj$sdev))
str(prcomp_obj$sdev)
ggplot(data = data.frame(c(1:length(prcomp_obj$sdev) ), prcomp_obj$sdev) ) + geom_point()
prcomp_obj$sdev
names(prcomp_obj$sdev)
names(prcomp_obj$sdev) = c(1:length(prcomp_obj$sdev))
names(prcomp_obj$sdev)
data = data.frame(compnum = names(prcomp_obj$sdev), sdev = prcomp_obj$sdev)
compdata = data.frame(compnum = names(prcomp_obj$sdev), sdev = prcomp_obj$sdev)
head(compdata)
ggplot(compdata, x = compnum, y=sdev  ) + geom_point()
ggplot(compdata ) + geom_point(x = compnum, y=sdev )
ggplot( ) + geom_point(data = compdata , x = compnum, y=sdev )
ggplot() + geom_point(data = compdata , aes(x = compnum, y=sdev) )
head(compdata)
compdata[1:10,]
ggplot() + geom_point(data = compdata[1:50,] , aes(x = compnum, y=sdev) )
ggplot() + geom_point(data = compdata[1:20,] , aes(x = compnum, y=sdev) )
compdata = data.frame(compnum = c(1:length(prcomp_obj$sdev)), sdev = prcomp_obj$sdev)
head(compdata)
ggplot() + geom_point(data = compdata[1:20,] , aes(x = compnum, y=sdev) )
ggplot() + geom_point(data = compdata[1:200,] , aes(x = compnum, y=sdev) )
ggplot() + geom_point(data = compdata[1:20,] , aes(x = compnum, y=sdev) )
compdata[1:20,]
df = reduce_data(df, frac = 0.1)
dim(df)
df = readRDS('./Week3/parsed_data.rds')
qdata = read_delim('./Week3/question_data.csv', ';')
df = reduce_data(df, frac = 0.1)
dim(df)
Total_vals = dim(df)[1]*dim(df)[2]
Total_vals
frac_na = sum(is.na(df))/Total_vals
frac_na
colnames(qdata)[[1]] = "q_num"
head(qdata)
q_ans_2 = dplyr::filter(qdata, is.na(option_3), is.na(option_4))$q_num
q_ans_3 = dplyr::filter(qdata, !is.na(option_3), is.na(option_4))$q_num
q_ans_4 = dplyr::filter(qdata, !is.na(option_3), !is.na(option_4))$q_num
df_qs = dplyr::select( df, starts_with("q"))
df_ds = dplyr::select( df, starts_with("d"))
df_ps = dplyr::select( df, starts_with("p"))
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_3ansq = df_qs[, names(df_qs) %in% q_ans_3]
df_4ansq = df_qs[, names(df_qs) %in% q_ans_4]
df_misc = dplyr::select( df, -starts_with("q"), -starts_with("p"), -starts_with("d") )
users = dplyr::select( df, d_username )
df_2ansq = numericalize(df_2ansq)
df_2ansq = na.aggregate(df_2ansq)
df_2ansq[1:10,1:10]
prcomp_obj = prcomp(df_2ansq)
typeof(prcomp_obj$sdev)
head(names(prcomp_obj$sdev))
names(prcomp_obj$sdev) = c(1:length(prcomp_obj$sdev))
compdata = data.frame(compnum = c(1:length(prcomp_obj$sdev)), sdev = prcomp_obj$sdev)
head(compdata)
compdata[1:20,]
ggplot() + geom_point(data = compdata[1:20,] , aes(x = compnum, y=sdev) )
df = readRDS('./Week3/parsed_data.rds')
qdata = read_delim('./Week3/question_data.csv', ';')
df = reduce_data(df, frac = 0.2)
dim(df)
Total_vals = dim(df)[1]*dim(df)[2]
Total_vals
frac_na = sum(is.na(df))/Total_vals
frac_na
colnames(qdata)[[1]] = "q_num"
head(qdata)
q_ans_2 = dplyr::filter(qdata, is.na(option_3), is.na(option_4))$q_num
q_ans_3 = dplyr::filter(qdata, !is.na(option_3), is.na(option_4))$q_num
q_ans_4 = dplyr::filter(qdata, !is.na(option_3), !is.na(option_4))$q_num
numericalize = function(dfin)
{
df_mat = data.matrix(dfin)
class(df_mat) = "numeric"
df_mat = df_mat - 1
ans = data.frame(df_mat)
return(ans)
}
df_qs = dplyr::select( df, starts_with("q"))
df_ds = dplyr::select( df, starts_with("d"))
df_ps = dplyr::select( df, starts_with("p"))
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_3ansq = df_qs[, names(df_qs) %in% q_ans_3]
df_4ansq = df_qs[, names(df_qs) %in% q_ans_4]
df_misc = dplyr::select( df, -starts_with("q"), -starts_with("p"), -starts_with("d") )
users = dplyr::select( df, d_username )
df_2ansq = numericalize(df_2ansq)
df_2ansq = na.aggregate(df_2ansq)
df_2ansq[1:10,1:10]
prcomp_obj = prcomp(df_2ansq)
typeof(prcomp_obj$sdev)
head(names(prcomp_obj$sdev))
names(prcomp_obj$sdev) = c(1:length(prcomp_obj$sdev))
compdata = data.frame(compnum = c(1:length(prcomp_obj$sdev)), sdev = prcomp_obj$sdev)
head(compdata)
compdata[1:20,]
ggplot() + geom_point(data = compdata[1:20,] , aes(x = compnum, y=sdev) )
?prcomp
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_2ansq = numericalize(df_2ansq)
df_2ansq[1:10,1:10]
prcomp_obj = prcomp(~ ., data=df_2ansq, center = TRUE, scale = TRUE, na.action = na.omit)
prcomp_obj = prcomp(~ ., data=df_2ansq, center = TRUE, scale = FALSE, na.action = na.omit)
head(names(prcomp_obj$sdev))
compdata = data.frame(compnum = c(1:length(prcomp_obj$sdev)), sdev = prcomp_obj$sdev)
head(compdata)
compdata[1:20,]
names(prcomp_obj$sdev) = c(1:length(prcomp_obj$sdev))
compdata = data.frame(compnum = c(1:length(prcomp_obj$sdev)), sdev = prcomp_obj$sdev)
head(compdata)
compdata[1:20,]
dft = data.frame(c(1,2,3),c(1,1,1),c(4,5,6))
dft
dft[,apply(dft, 2, var, na.rm=TRUE) != 0]
deconstantize = function(x) {x[,apply(x, 2, var, na.rm=TRUE) != 0]}
numericalize = function(x){  dm = data.matrix(x) ;  class(dm) = "numeric" ;  return(data.frame(dm-1)) }
deconstantize = function(x) {x[,apply(x, 2, var, na.rm=TRUE) != 0]}
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_2ansq = deconstantize(df_2ansq)
df_2ansq[1:10, 1:10]
df_2ansq = df_qs[, names(df_qs) %in% q_ans_2]
df_2ansq[1:10, 1:10]
df_2ansq = numericalize(df_2ansq)
df_2ansq[1:10, 1:10]
df_2ansq = deconstantize(df_2ansq)
df_2ansq[1:10, 1:10]
prcomp_obj = prcomp(~ ., data=df_2ansq, center = TRUE, scale = FALSE, na.action = na.omit)
names(prcomp_obj$sdev) = c(1:length(prcomp_obj$sdev))
compdata = data.frame(compnum = c(1:length(prcomp_obj$sdev)), sdev = prcomp_obj$sdev)
head(compdata)
df_2ansq[1:15, 1:15]
df_2ansq[1:10,1:10]
df_2ansq[1:15,1:15]
prcomp_obj = prcomp(~ ., data=df_2ansq, center = TRUE, scale = FALSE, na.action = na.omit)
names(prcomp_obj$sdev) = c(1:length(prcomp_obj$sdev))
compdata = data.frame(compnum = c(1:length(prcomp_obj$sdev)), sdev = prcomp_obj$sdev)
head(compdata)
compdata[1:20,]
compdata
?cor
df_2ansq[1:15,1:15]
corM = cor(df_2ansq, use = "pairwise.complete.obs"  )
corM[1:15,1:15]
eigenobj = eigen(corM, symmetric = TRUE)
sum(is.na(corM))
dim(corM)
corM(is.na(corM)) == 0
sum(is.na(corM))
corM[is.na(corM)] == 0
corM[is.na(corM)] = 0
sum(is.na(corM))
eigenobj = eigen(corM, symmetric = TRUE)
eigenobj$values
?sort
eigenobj$vectors
eigenobj$values
eigenobj$vectors[[1]]
(eigenobj$vectors)[[1]]
(eigenobj$vectors)
(eigenobj$vectors)[,1]
head(eigenobj)
str(eigenobj)
eigenobj[1:10,1:10]
head(eigenobj$values)
large_evals_mask = abs(eigenobj$values) > 10
large_evals_mask
(eigenobj$values)[large_evals_mask]
large_evals_mask = abs(eigenobj$values) > 5
(eigenobj$values)[large_evals_mask]
large_evals = (eigenobj$values)[large_evals_mask]
?eigen
large_evecs = (eigenobj$vectors)[large_evals_mask]
str(large_evecs)
head(large_evecs)
eigenobj$vectors
large_evecs = (eigenobj$vectors)[,large_evals_mask]
head(large_evecs)
large_evals
large_evecs[1:15, 1:15]
large_evecs[1:15, 1:10]
large_evecs[1:15, 1:7]
large_evals
large_evecs[1:15, 1:7]
head(df_2ansq)
rownames(corM)
colnames(corM)
large_evals
large_evecs[1:15, 1:7]
eigenobj$vectors
rownames(eigenobj$vectors)
rownames(corM)
rownames(eigenobj$vectors) = rownames(corM)
rownames(eigenobj$vectors)
large_evals = (eigenobj$values)[large_evals_mask]
large_evecs = (eigenobj$vectors)[,large_evals_mask]
large_evecs[1:15, 1:7]
large_evals_mask = abs(eigenobj$values) > 8
rownames(eigenobj$vectors) = rownames(corM)
large_evals = (eigenobj$values)[large_evals_mask]
large_evecs = (eigenobj$vectors)[,large_evals_mask]
large_evecs[1:15, 1:7]
head(large_evecs)
names(large_evals)
names(eigenobj$values)
length(large_evals)
large_evals_mask = abs(eigenobj$values) > 8
large_evals = (eigenobj$values)[large_evals_mask]
large_evecs = (eigenobj$vectors)[,large_evals_mask]
eval_df = data.frame(eigenvector_number = c(1:length(large_evals)), evals = large_evals)
head(eval_df)
eval_df = data.frame(eigenvector_number = c(1:length(large_evals)), eigenvalue = large_evals)
head(eval_df)
ggplot() + geom_point(data = eval_df  , aes(x = eigenvector_number, y=eigenvalue) )
large_evals_mask = abs(eigenobj$values) > 5
large_evals = (eigenobj$values)[large_evals_mask]
large_evecs = (eigenobj$vectors)[,large_evals_mask]
eval_df = data.frame(eigenvector_number = c(1:length(large_evals)), eigenvalue = large_evals)
ggplot() + geom_point(data = eval_df  , aes(x = eigenvector_number, y=eigenvalue) )
ggplot() + geom_point(data = eval_df  , aes(x = eigenvector_number, y=abs(eigenvalue) ) )
large_evals_mask = abs(eigenobj$values) > 4
large_evals = (eigenobj$values)[large_evals_mask]
large_evecs = (eigenobj$vectors)[,large_evals_mask]
eval_df = data.frame(eigenvector_number = c(1:length(large_evals)), eigenvalue = large_evals)
ggplot() + geom_point(data = eval_df  , aes(x = eigenvector_number, y=abs(eigenvalue) ) )
large_evals_mask = abs(eigenobj$values) > 4
large_evals = abs((eigenobj$values)[large_evals_mask])
large_evecs = (eigenobj$vectors)[,large_evals_mask]
eval_df = data.frame(eigenvector_number = c(1:length(large_evals)), eigenvalue = large_evals)
ggplot() + geom_point(data = eval_df  , aes(x = eigenvector_number, y=eigenvalue ) )
large_evals_mask = abs(eigenobj$values) > 12
large_evals = abs((eigenobj$values)[large_evals_mask])
large_evecs = (eigenobj$vectors)[,large_evals_mask]
eval_df = data.frame(eigenvector_number = c(1:length(large_evals)), eigenvalue = large_evals)
ggplot() + geom_point(data = eval_df  , aes(x = eigenvector_number, y=eigenvalue ) )
large_evecs
large_evecs[,1]
sort(large_evecs[,1])
head(sort(large_evecs[,1]))
head(sort(large_evecs[,1]))[1:20]
sort(large_evecs[,1])[1:20]
names(sort(large_evecs[,1])[1:20])
descriptiveize = function(x) {return(qdata[x,2]) }
descriptiveize(names(sort(large_evecs[,1])[1:20]))
descriptiveize = function(x) {return(qdata[names(qdata) %in% x,2]) }
descriptiveize(names(sort(large_evecs[,1])[1:20]))
b = names(sort(large_evecs[,1])[1:20])
b
typeof(b)
qdata[names(qdata) %in% b,2]
names(qdata)
qdata = read_delim('./Week3/question_data.csv', ';')
rownames(qdata)
descriptiveize = function(x) {return(qdata[rownames(qdata) %in% x,2]) }
descriptiveize(b)
descriptiveize = function(x) {return(qdata[rownames(qdata) %in% x,2]) }
typeof(b)
b
names(qdata) %in% b
qdata[b %in% names(qdata)  ,2]
qdata[b %in% names(qdata)  ,2]
b %in% names(qdata)
b %in% names(qdata)
names(qdata) %in% b
names(qdata)
rownames(qdata)
rownames(qdata) %in% b
rownames(qdata) %in% b
b  %in%  rownames(qdata)
rownames(qdata) %in% b
b
qdata[rownames(qdata) %in% b  ,2]
rownames(qdata) %in% b
sum(rownames(qdata) %in% b )
b
rownames
rownames(qdata)
rownames(qdata)
b
rownames(qdata)
rownames(qdata) = paste("q", rownames(qdata) )
rownames(qdata)
?paste
qdata = read_delim('./Week3/question_data.csv', ';')
rownames(qdata) = paste("q", rownames(qdata), sep = "" )
rownames(qdata)
rownames(qdata)
b
sum(rownames(qdata) %in% b )
qdata[rownames(qdata) %in% b  ,2]
descriptiveize = function(x) {return(qdata[rownames(qdata) %in% x,2]) }
b
descriptiveize(b)
b = names(sort(large_evecs[,1])[1:20])
typeof(b)
length(b)
print(descriptiveize(b))
b
b = names(sort(large_evecs[,1])[1:3])
length(b)
b
print(descriptiveize(b))
descriptiveize = function(x) {return(qdata[rownames(qdata) %in% x,2]) }
b = names(sort(large_evecs[,1])[1:5])
length(b)
b
print(descriptiveize(b))
b
b = names(sort(large_evecs[,1])[1:50])
length(b)
b
print(descriptiveize(b))
b
print(descriptiveize(b))
print(descriptiveize(names(sort(large_evecs[,2])[1:50])))
print(descriptiveize(names(sort(large_evecs[,3])[1:50])))
print(descriptiveize(names(sort(large_evecs[,1])[1:50])))
print(descriptiveize(names(sort(large_evecs[,1])[1:50])))
print(descriptiveize(names(sort(large_evecs[,2])[1:50])))
print(descriptiveize(names(sort(large_evecs[,1])[1:50])))
